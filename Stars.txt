Phusudo code =>
i) way of representing look
1) Patterns Questions
 ---->i
 |
 |  1 2 3 4
 |  1 2 3 4
 |  1 2 3 4
 j  1 2 3 4

i)
#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    int i = 1;
    while (i <= n){
        int j = 1;
        while(j <= n){
            cout<<j;
             j = j + 1;
        }
        cout << endl;
        i = i + 1;
    }
}


// using  for loop 
#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    int i =1;
    for(int a=1; a <= n ;a++){
        int j =1;
    for(int b=1;b <= n;b++){
        cout << j;
         j = j+1;
    }
    cout << endl;
       i = i+1;
    }
}


  Observation ==> 
  row = 4
  col = 1
  n = 4 

  col = 1-n

  3  2  1
  3  2  1
  3  2  1
  formula = n-j+1 = 4-1-1 = 3


// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;

//   3  2  1
//   3  2  1
//   3  2  1

int main(){
    int n;
    cin >> n;
    
    int i = 1;
    while (i <= n){
        int j = 1;
        while(j <= n){
            cout<< n-j+1;
             j = j + 1;
        }
        cout << endl;
        i = i + 1;
    }
}



1 2 3
4 5 6
7 8 9


#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    int i =1;
    int count = 0;
 while(i<=n){
     int j =1;
 while(j<=n){
     cout << count+1;
     count = count+1;
     j = j +1;
 }
  cout << endl;
  i = i+1;
 }
}


*
* * 
* * *
* * * *

n = 4;
i = 4;

j depends on i 

#include <iostream>
using namespace std;

// *
// * *
// * * *
// * * * *

int main(){
   int n;
   cin >> n;
   int row = 1;
   while(row<=n){
       int col = 1;
     while(col <= row){
         cout << "*";
         col = col +1;
     }
     cout << endl;
     row = row +1;
   }
}


1
2 2
3 3 3
4 4 4 4

i  = 4;
n = 4;

its depends on row number.

#include <iostream>
using namespace std;

int main(){
  int n;
  cin >> n;
  int row = 0;
  
  while(row <= n){
      int col = 0;
    while(col<=row){
        cout << row;
       col = col +1;
    }
    cout << endl;
    row = row + 1;
  }


#include <iostream>
using namespace std;


// 1
// 2 3
// 4 5 6
// 7 8 9 10  

int main(){
  int n;
  cin >> n;
  int row=1;
  int inc = 1;
  while(row <= n){
      int col = 1;
  while(col<=row){
      cout << inc;
      inc = inc +1;
      col = col +1;
  }
   cout << endl;
  row = row +1;
  }



#include <iostream>
using namespace std;


#include <iostream>
using namespace std;


// 1
// 23
// 345

//Its fully depends on row

int main(){
  int n;
  cin >> n;
  int row=1;
  int inc = 1;
  while(row <= n){
      int col = 1;
      int value  = row;
  while(col<=row){
     cout << value;
     value = value+1;
     col = col +1;
  }
   cout << endl;
  row = row +1;
  }  
} 
}

#include <iostream>
using namespace std;

int main() {
 int n;
 cin >> n;
 for(int i =0;i<=n;i++){
     int value = i;
  for(int j=1;j<=i;j++){
      cout << value;
      value ++;
  }
 }
 
 return 0;
}


1
2 1
3 2 1
4 3 2 1


// 1
// 2 1
// 3 2 1
// 4 3 2 1

Formula = i -j +1;

1This is I ==
1This is J == 

1 + 1 -1 = 1;


2This is I
1This is J

2 - 1 +1 = 1;

2This is I
2This is J

2 - 2 +1 = 1;

3This is I
1This is J

3 - 1 +1 = 3;

3This is I
2This is J

3 - 2 +1 = 2;

3This is I
3This is J

3 - 2 +1 = 1;


#include <iostream>
using namespace std;

int main(){
    int n;
    cin>>n;
    int i = 1;
 while(i<=n){
     int j =1;
while(j<=i){
    cout << i-j+1;
    j = j+1;
}
cout << endl;
i = i +1;
 }
 
}

   1 2 3 4
1 // A A A
2 // B B B
3 // C C C
4 // D D D

A + i -1;
A +1 -1 = A 
A +2 -1 = A(1)
A + 3 -1 = A(2)
A + 4 - 1 = A(3)

#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    int row = 1;
   while(row <= n){
       int col = 1;
    while(col <= n){
        char c = 'A' + row -1;
        cout << c;
        col = col+1;
    }
    cout << endl;
    row = row +1;
   }
}


// A B C
// A B C
// A B C

==> "A" + col -1
A + 1 -1 = A 
A + 2 -1 = A(1)
A + 3 -1 = A(3)

#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    int row = 1;
   while(row <= n){
       int col = 1;
    while(col <= n){
        char c = 'A' + col -1;
        cout << c;
        col = col+1;
    }
    cout << endl;
    row = row +1;
   }
}


// A B C
// D E F
// G H I

#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    int row = 1;
    char counter = 'A';
   while(row <= n){
       int col = 1;
    while(col <= n){
        cout << counter;
        counter = counter +1;
        col = col+1;
    }
    cout << endl;
    row = row +1;
   }
}

//A B C
//B C D
//C D E

#include <iostream>
using namespace std;

int main(){
  int n;
  cin >> n;
  int row = 1;
  while(row <= n){
      int col = 1;
  while(col<=n){
      char val = 'A' + row + col -2;
      cout << val;;
      col = col +1;
  }
  
  cout << endl;
  row = row +1 ;
  }
}


   1 2 3 4
// A
// BB
// CCC
// DDDD

"A" + row -1 
"A" + 2 -1 = A(1)
"A" + 3 -1 = A(2)
"A" + 4 -1 = A(3)

#include <iostream>
using namespace std;

int main(){
  int n;
  cin >> n;
  int row = 1;
  while(row <= n){
      int col = 1;
  while(col<=row){
      char val = 'A' + row -1;
      cout << val;;
      col = col +1;
  }
  
  cout << endl;
  row = row +1 ;
  }
}


// A
// BC
// DEF
// GHIJ

#include <iostream>
using namespace std;

int main(){
  int n;
  cin >> n;
  int count = 0;
  int row = 1;
  while(row <= n){
      int col = 1;
  while(col<=row){
      char val = 'A' + count;
      cout << val;
      count = count +1;
      col = col +1;
  }
  
  cout << endl;
  row = row +1 ;
  }
}


// A
// BC
// CDE
// DEFG
// EFGHI

('A' + row + col -2 )

#include <iostream>
using namespace std;

int main(){
  int n;
  cin >> n;
  int row = 1;
  while(row <= n){
      int col = 1;
  while(col<=row){
      char val = ('A' + row + col -2);
      cout << val;
      col = col +1;
  }
  
  cout << endl;
  row = row +1 ;
  }
}



// D
// CD
// BCD
// ABCD


('A' + n - row);
"A" + 4 -1 = A(3) = D

#include <iostream>
using namespace std;

int main(){
  int n;
  cin >> n;
  int row = 1;
  while(row <= n){
      int col = 1;
      char val = ('A' + n - row);
  while(col<=row){
      cout << val;
      val = val +1;
      col = col +1;
  }
  
  cout << endl;
  row = row +1 ;
  }
}



#include <iostream>
using namespace std;

// ABCD
// BCDE
// CDEF
// DEFG

'A' + row -1


int main(){
  int n;
  cin >> n;
  int row = 1;
  while(row <= n){
      int col = 1;
      char val = ('A' + row -1);
  while(col<= n){
      cout << val;
      val = val +1;
      col = col +1;
  }
  
  cout << endl;
  row = row +1 ;
  }
}


Start Prints
        *
      * *
    * * *
 * *  * *

 we need to print space n-1 times that means
 4-1 =3
 4-2 = 2
 4-3 = 1
 4-4 = 4


 // Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;

int main() {
   int n;
   cin >> n;
   int row = 0;
  while(row<=n){
      int space = n - row;
  while(space){
      cout << ' ';
      space = space -1;
    }
     int col =  0;
  while(col<=row){
      cout << "*";
      col = col +1;
  }
  cout << endl;
  row = row +1;
   }
}


    1
   121
  12321
 1234321


#include <iostream>
using namespace std;

int main()
{
   int n;
   cin >> n;
   int i = 1;
   
   //print karna hai space
   while(i<=n){
       //for space print
      int space = n- i +1;
      while(space){
          cout << " ";
          space = space -1;
      }
      
      //print first triangle
      int j=1;
      while(j<=i){
          cout << j;
          j=j+1;
      }
      
      
      //i-1
      
      int start = i -1;
      while(start){
          cout << start;
          start = start -1;
      }
      
      //print second title
      cout << endl;
      i = i +1;
   }
}



1 2 3 4 5 5 4 3 2 1 
1 2 3 4 * * 4 3 2 1
1 2 3 * * * * 3 2 1
1 2 * * * * * * 2 1
1 * * * * * * * * 1


// Operator ==> AND,OR,NOT,XOR
// Betwise operator
// For loop

//First we talk about Operator
AND
X  Y o/p
0  0  0
0  1  0
1  0  0
1  1  1

OR
X  Y o/p
0  0  0
0  1  1
1  0  1
1  1  1

NOT (we are using tilda sign for that)
X   o/p
0    1
1    0

XOR
X  Y o/p
0  0  0
0  1  1
1  0  1
1  1  0


#include <iostream>
using namespace std;

int main() {
    int a = 4;
    int b = 6;

    // Bitwise AND
    cout << "a & b: " << (a & b) << endl;

    // Bitwise OR
    cout << "a | b: " << (a | b) << endl;

    // Bitwise NOT
    cout << "~a: " << ~a << endl;
    cout << "~b: " << ~b << endl;

    // Bitwise XOR
    cout << "a ^ b: " << (a ^ b) << endl;

    return 0;
}


//left shift and right shift operators

 15 >> 3 = 15  = 1 
 15 << 4 = 240


 30 << 5;


         1 < 1
         1 < 6
         1 < 7
         1 < 1000
         8 < 8 